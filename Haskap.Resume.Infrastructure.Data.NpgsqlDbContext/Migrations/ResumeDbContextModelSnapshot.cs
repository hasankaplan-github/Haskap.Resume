// <auto-generated />
using System;
using Haskap.Resume.Infrastructure.Data.NpgsqlDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Haskap.Resume.Infrastructure.Data.NpgsqlDbContext.Migrations
{
    [DbContext(typeof(ResumeDbContext))]
    partial class ResumeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Haskap.Resume.Domain.Core.MessageAggregate.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("MessageDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("Haskap.Resume.Domain.Core.MessageAggregate.Message", b =>
                {
                    b.OwnsOne("Haskap.Resume.Domain.Core.MessageAggregate.MessageBody", "Body", b1 =>
                        {
                            b1.Property<Guid>("MessageId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("MessageId");

                            b1.ToTable("Message");

                            b1.WithOwner()
                                .HasForeignKey("MessageId");
                        });

                    b.OwnsOne("Haskap.Resume.Domain.Core.MessageAggregate.MessageSenderEmailAddress", "SenderEmailAddress", b1 =>
                        {
                            b1.Property<Guid>("MessageId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("MessageId");

                            b1.ToTable("Message");

                            b1.WithOwner()
                                .HasForeignKey("MessageId");
                        });

                    b.OwnsOne("Haskap.Resume.Domain.Core.MessageAggregate.MessageSenderName", "SenderName", b1 =>
                        {
                            b1.Property<Guid>("MessageId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("MessageId");

                            b1.ToTable("Message");

                            b1.WithOwner()
                                .HasForeignKey("MessageId");
                        });

                    b.OwnsOne("Haskap.Resume.Domain.Core.MessageAggregate.MessageSubject", "Subject", b1 =>
                        {
                            b1.Property<Guid>("MessageId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("MessageId");

                            b1.ToTable("Message");

                            b1.WithOwner()
                                .HasForeignKey("MessageId");
                        });

                    b.Navigation("Body")
                        .IsRequired();

                    b.Navigation("SenderEmailAddress")
                        .IsRequired();

                    b.Navigation("SenderName")
                        .IsRequired();

                    b.Navigation("Subject")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
